// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc-random.proto

package com.github.zhenwei.grpc;

public final class GrpcRandom {
  private GrpcRandom() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RpcDataRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.zhenwei.grpc.RpcDataRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 randomLength = 1;</code>
     * @return The randomLength.
     */
    int getRandomLength();
  }
  /**
   * Protobuf type {@code com.github.zhenwei.grpc.RpcDataRequest}
   */
  public static final class RpcDataRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.zhenwei.grpc.RpcDataRequest)
      RpcDataRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RpcDataRequest.newBuilder() to construct.
    private RpcDataRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcDataRequest() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RpcDataRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RpcDataRequest.class, Builder.class);
    }

    public static final int RANDOMLENGTH_FIELD_NUMBER = 1;
    private int randomLength_ = 0;
    /**
     * <code>int32 randomLength = 1;</code>
     * @return The randomLength.
     */
    @Override
    public int getRandomLength() {
      return randomLength_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (randomLength_ != 0) {
        output.writeInt32(1, randomLength_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (randomLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, randomLength_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RpcDataRequest)) {
        return super.equals(obj);
      }
      RpcDataRequest other = (RpcDataRequest) obj;

      if (getRandomLength()
          != other.getRandomLength()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RANDOMLENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getRandomLength();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RpcDataRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcDataRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcDataRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcDataRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcDataRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcDataRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcDataRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RpcDataRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RpcDataRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RpcDataRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RpcDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RpcDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RpcDataRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.zhenwei.grpc.RpcDataRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.zhenwei.grpc.RpcDataRequest)
        RpcDataRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataRequest_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RpcDataRequest.class, Builder.class);
      }

      // Construct using com.github.zhenwei.grpc.GrpcRandom.RpcDataRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        randomLength_ = 0;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataRequest_descriptor;
      }

      @Override
      public RpcDataRequest getDefaultInstanceForType() {
        return RpcDataRequest.getDefaultInstance();
      }

      @Override
      public RpcDataRequest build() {
        RpcDataRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RpcDataRequest buildPartial() {
        RpcDataRequest result = new RpcDataRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(RpcDataRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.randomLength_ = randomLength_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RpcDataRequest) {
          return mergeFrom((RpcDataRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RpcDataRequest other) {
        if (other == RpcDataRequest.getDefaultInstance()) return this;
        if (other.getRandomLength() != 0) {
          setRandomLength(other.getRandomLength());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                randomLength_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int randomLength_ ;
      /**
       * <code>int32 randomLength = 1;</code>
       * @return The randomLength.
       */
      @Override
      public int getRandomLength() {
        return randomLength_;
      }
      /**
       * <code>int32 randomLength = 1;</code>
       * @param value The randomLength to set.
       * @return This builder for chaining.
       */
      public Builder setRandomLength(int value) {

        randomLength_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 randomLength = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomLength() {
        bitField0_ = (bitField0_ & ~0x00000001);
        randomLength_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.github.zhenwei.grpc.RpcDataRequest)
    }

    // @@protoc_insertion_point(class_scope:com.github.zhenwei.grpc.RpcDataRequest)
    private static final RpcDataRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RpcDataRequest();
    }

    public static RpcDataRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcDataRequest>
        PARSER = new com.google.protobuf.AbstractParser<RpcDataRequest>() {
      @Override
      public RpcDataRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RpcDataRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcDataRequest> getParserForType() {
      return PARSER;
    }

    @Override
    public RpcDataRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RpcDataResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.zhenwei.grpc.RpcDataResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string random = 1;</code>
     * @return The random.
     */
    String getRandom();
    /**
     * <code>string random = 1;</code>
     * @return The bytes for random.
     */
    com.google.protobuf.ByteString
        getRandomBytes();
  }
  /**
   * Protobuf type {@code com.github.zhenwei.grpc.RpcDataResponse}
   */
  public static final class RpcDataResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.zhenwei.grpc.RpcDataResponse)
      RpcDataResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RpcDataResponse.newBuilder() to construct.
    private RpcDataResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcDataResponse() {
      random_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RpcDataResponse();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataResponse_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RpcDataResponse.class, Builder.class);
    }

    public static final int RANDOM_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile Object random_ = "";
    /**
     * <code>string random = 1;</code>
     * @return The random.
     */
    @Override
    public String getRandom() {
      Object ref = random_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        random_ = s;
        return s;
      }
    }
    /**
     * <code>string random = 1;</code>
     * @return The bytes for random.
     */
    @Override
    public com.google.protobuf.ByteString
        getRandomBytes() {
      Object ref = random_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        random_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(random_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, random_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(random_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, random_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RpcDataResponse)) {
        return super.equals(obj);
      }
      RpcDataResponse other = (RpcDataResponse) obj;

      if (!getRandom()
          .equals(other.getRandom())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RANDOM_FIELD_NUMBER;
      hash = (53 * hash) + getRandom().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RpcDataResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcDataResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcDataResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcDataResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcDataResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcDataResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcDataResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RpcDataResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RpcDataResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RpcDataResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RpcDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RpcDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RpcDataResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.zhenwei.grpc.RpcDataResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.zhenwei.grpc.RpcDataResponse)
        RpcDataResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataResponse_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RpcDataResponse.class, Builder.class);
      }

      // Construct using com.github.zhenwei.grpc.GrpcRandom.RpcDataResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        random_ = "";
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GrpcRandom.internal_static_com_github_zhenwei_grpc_RpcDataResponse_descriptor;
      }

      @Override
      public RpcDataResponse getDefaultInstanceForType() {
        return RpcDataResponse.getDefaultInstance();
      }

      @Override
      public RpcDataResponse build() {
        RpcDataResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RpcDataResponse buildPartial() {
        RpcDataResponse result = new RpcDataResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(RpcDataResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.random_ = random_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RpcDataResponse) {
          return mergeFrom((RpcDataResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RpcDataResponse other) {
        if (other == RpcDataResponse.getDefaultInstance()) return this;
        if (!other.getRandom().isEmpty()) {
          random_ = other.random_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                random_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private Object random_ = "";
      /**
       * <code>string random = 1;</code>
       * @return The random.
       */
      public String getRandom() {
        Object ref = random_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          random_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string random = 1;</code>
       * @return The bytes for random.
       */
      public com.google.protobuf.ByteString
          getRandomBytes() {
        Object ref = random_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          random_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string random = 1;</code>
       * @param value The random to set.
       * @return This builder for chaining.
       */
      public Builder setRandom(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        random_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string random = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandom() {
        random_ = getDefaultInstance().getRandom();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string random = 1;</code>
       * @param value The bytes for random to set.
       * @return This builder for chaining.
       */
      public Builder setRandomBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        random_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.github.zhenwei.grpc.RpcDataResponse)
    }

    // @@protoc_insertion_point(class_scope:com.github.zhenwei.grpc.RpcDataResponse)
    private static final RpcDataResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RpcDataResponse();
    }

    public static RpcDataResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcDataResponse>
        PARSER = new com.google.protobuf.AbstractParser<RpcDataResponse>() {
      @Override
      public RpcDataResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RpcDataResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcDataResponse> getParserForType() {
      return PARSER;
    }

    @Override
    public RpcDataResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_zhenwei_grpc_RpcDataRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_zhenwei_grpc_RpcDataRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_zhenwei_grpc_RpcDataResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_zhenwei_grpc_RpcDataResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021grpc-random.proto\022\027com.github.zhenwei." +
      "grpc\"&\n\016RpcDataRequest\022\024\n\014randomLength\030\001" +
      " \001(\005\"!\n\017RpcDataResponse\022\016\n\006random\030\001 \001(\t2" +
      "s\n\017RandomGenerator\022`\n\tGenRandom\022\'.com.gi" +
      "thub.zhenwei.grpc.RpcDataRequest\032(.com.g" +
      "ithub.zhenwei.grpc.RpcDataResponse\"\000b\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_github_zhenwei_grpc_RpcDataRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_zhenwei_grpc_RpcDataRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_zhenwei_grpc_RpcDataRequest_descriptor,
        new String[] { "RandomLength", });
    internal_static_com_github_zhenwei_grpc_RpcDataResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_github_zhenwei_grpc_RpcDataResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_zhenwei_grpc_RpcDataResponse_descriptor,
        new String[] { "Random", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
